@{
    ViewData["Title"] = "Manager Page";
    ViewData["colored"] = true;
}

@section Styles {
    <link href="@Url.Content("~/css/Manager/Graphs.css")" rel="stylesheet" type="text/css" />
}

<!-- load the d3.js library -->
<script src="https://d3js.org/d3.v4.min.js"></script>

<!-- Color scale -->
<script src="https://d3js.org/d3-scale-chromatic.v1.min.js"></script>

<div class="cb-main-color">
    <h1>Graphs Page</h1>

    <h3>Books by Categories</h3>
    <div id="books-amount"></div>

    <script>
        // set the dimensions and margins of the graph
        var margin = { top: 20, right: 20, bottom: 30, left: 40 },
            width = 960 - margin.left - margin.right,
            height = 500 - margin.top - margin.bottom;

        // set the ranges
        var x = d3.scaleBand()
            .range([0, width])
            .padding(0.1);
        var y = d3.scaleLinear()
            .range([height, 0]);

        // append the svg object to the right div
        var svg = d3.select("#books-amount").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform",
                "translate(" + margin.left + "," + margin.top + ")");

        // get the data
        d3.json("GetCatAmounts", function (data) {
            // Scale the range of the data in the domains
            x.domain(data.map(function (d) { return d.item1; }));
            y.domain([0, d3.max(data, function (d) { return d.item2; })]);

            // append the rectangles for the bar chart
            svg.selectAll(".bar")
                .data(data)
                .enter().append("rect")
                .attr("class", "bar")
                .attr("x", function (d) { return x(d.item1); })
                .attr("width", x.bandwidth())
                .attr("y", function (d) { return y(d.item2); })
                .attr("height", function (d) { return height - y(d.item2); });

            // add the x Axis
            svg.append("g")
                .attr("transform", "translate(0," + height + ")")
                .call(d3.axisBottom(x));

            // add the y Axis
            svg.append("g")
                .call(d3.axisLeft(y));
        });

    </script>



    <!-- Create a div where the graph will take place -->
    <div id="my_dataviz"></div>

    <!-- Color scale -->




    <h3>Most Watched Books</h3>

    @foreach (var book in ViewData["WatchedBooks"] as IEnumerable<CoolBook.Models.Book>)
    {
        <div class="col-sm-5" style="width: 100%"> @book.Name, @book.Views</div>
    }

    <h3>Highest Rated Books</h3>

    @foreach (var book in ViewData["BestBooks"] as IEnumerable<CoolBook.Models.Book>)
    {
        <div class="col-sm-5" style="width: 100%"> @book.Name, @book.Rate </div>
    }

</div>